# Copyright 2017-2018 The Last Pickle Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
aliases:
  - &default_job
      docker:
        # specify the version you desire here
        - image: circleci/openjdk:8-jdk-node-browsers
          environment:
            LOCAL_JMX: no
            NODES_PER_DC: 2

      steps:
        - checkout
        - run:
            name: Install System Dependencies
            command: |
                sudo apt-get update -qq
                sudo apt-get install -y libjna-java python-dev python-pip libyaml-dev nodejs
                sudo pip install pyYaml ccm
                sudo npm install -g bower > /dev/null

        # Download and cache dependencies
        - restore_cache:
            keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

        - run:
            name: Download dependencies
            command: |
              mvn -B dependency:go-offline
              ccm create test_1_2 --no-switch -v 1.2.19
              ccm create test_2_0 --no-switch -v 2.0.17
              ccm create test_2_1 --no-switch -v 2.1.20
              ccm create test_2_2 --no-switch -v 2.2.13
              ccm create test_3_0 --no-switch -v 3.0.17
              ccm create test_3_11 --no-switch -v 3.11.3
              # 4.0 builds are ignored until new ccm version is released and available in pip
              #   see comment below under "workflows"
              #ccm create test_trunk --no-switch -v git:trunk

        - save_cache:
            paths:
              - ~/.m2
              - ~/.ccm/repository
            key: v1-dependencies-{{ checksum "pom.xml" }}

        - run:
            name: Start ccm and run tests
            command: |
                set -x
                mkdir -p ~/.local
                cp src/ci/jmxremote.password ~/.local/jmxremote.password
                touch ~/.local/jmxremote.blank.password
                chmod 400 ~/.local/jmxremote*.password
                cat /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/management/jmxremote.access
                sudo chmod 777 /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/management/jmxremote.access
                echo "cassandra     readwrite" >> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/management/jmxremote.access
                cat /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/management/jmxremote.access
                ccm create test -v $CASSANDRA_VERSION
                ccm populate --vnodes -n $NODES_PER_DC:$NODES_PER_DC
                for i in `seq 1 $(($NODES_PER_DC *2))` ; do
                  if [ "$i" -le "$NODES_PER_DC" ] ; then
                    sed -i 's/etc\/cassandra\/jmxremote.password/home\/circleci\/.local\/jmxremote.password/' ~/.ccm/test/node$i/conf/cassandra-env.sh
                  else
                    if  echo "$JOB_COMMAND" | grep -q "Pskip-tests-needing-all-nodes-reachable"  ; then
                      # scenarios that are not tagged with @all_nodes_reachable can be tested against an unreachable DC2
                      sed -i 's/etc\/cassandra\/jmxremote.password/home\/circleci\/.local\/jmxremote.blank.password/' ~/.ccm/test/node$i/conf/cassandra-env.sh
                    else
                      # @all_nodes_reachable scenarios need all datacenters+nodes reachable
                      sed -i 's/etc\/cassandra\/jmxremote.password/home\/circleci\/.local\/jmxremote.password/' ~/.ccm/test/node$i/conf/cassandra-env.sh
                    fi
                  fi
                  sed -i 's/#MAX_HEAP_SIZE="4G"/MAX_HEAP_SIZE="136m"/' ~/.ccm/test/node$i/conf/cassandra-env.sh
                  sed -i 's/#HEAP_NEWSIZE="800M"/HEAP_NEWSIZE="112M"/' ~/.ccm/test/node$i/conf/cassandra-env.sh
                  sed -i 's/LOCAL_JMX=yes/LOCAL_JMX=no/' ~/.ccm/test/node$i/conf/cassandra-env.sh
                  sed -i 's/_timeout_in_ms:.*/_timeout_in_ms: 60000/' ~/.ccm/test/node$i/conf/cassandra.yaml
                  sed -i 's/cross_node_timeout: false/cross_node_timeout: true/' ~/.ccm/test/node$i/conf/cassandra.yaml
                  sed -i 's/concurrent_reads: 32/concurrent_reads: 4/' ~/.ccm/test/node$i/conf/cassandra.yaml
                  sed -i 's/concurrent_writes: 32/concurrent_writes: 4/' ~/.ccm/test/node$i/conf/cassandra.yaml
                  sed -i 's/concurrent_counter_writes: 32/concurrent_counter_writes: 4/' ~/.ccm/test/node$i/conf/cassandra.yaml
                  sed -i 's/num_tokens: 256/num_tokens: 4/' ~/.ccm/test/node$i/conf/cassandra.yaml
                  sed -i 's/auto_snapshot: true/auto_snapshot: false/' ~/.ccm/test/node$i/conf/cassandra.yaml
                  sed -i 's/enable_materialized_views: true/enable_materialized_views: false/' ~/.ccm/test/node$i/conf/cassandra.yaml
                  sed -i 's/internode_compression: dc/internode_compression: none/' ~/.ccm/test/node$i/conf/cassandra.yaml
                  echo 'phi_convict_threshold: 16' >> ~/.ccm/test/node$i/conf/cassandra.yaml
                  sed -i 's/# file_cache_size_in_mb: 512/file_cache_size_in_mb: 1/' ~/.ccm/test/node$i/conf/cassandra.yaml
                  if  echo "$CASSANDRA_VERSION" | grep -q "trunk"  ; then
                    sed -i 's/start_rpc: true//' ~/.ccm/test/node$i/conf/cassandra.yaml
                    echo '-Dcassandra.max_local_pause_in_ms=15000' >> ~/.ccm/test/node$i/conf/jvm-server.options
                  else
                    sed -i 's/start_rpc: true/start_rpc: false/' ~/.ccm/test/node$i/conf/cassandra.yaml
                  fi
                  echo 'JAVA_OPTS="$JAVA_OPTS -Dcassandra.available_processors=2"' >> ~/.ccm/test/node$i/conf/cassandra-env.sh
                done
                mvn install -B -DskipTests
                ccm start -v
                ccm status
                ccm checklogerror
                sh -c '$JOB_COMMAND'

        - run:
            name: Log errors
            command: |
                ccm checklogerror
                cat target/rat.txt

        - store_test_results:
            path: src/server/target/surefire-reports

jobs:

    build:
      docker:
        - image: circleci/openjdk:8-jdk-node-browsers
      steps:
        - checkout
        - run:
            name: Install System Dependencies
            command: |
                sudo apt-get update -qq
                sudo apt-get install -y libjna-java python-dev python-pip libyaml-dev nodejs
                sudo pip install pyYaml ccm
                sudo npm install -g bower > /dev/null
        - restore_cache:
            keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
        - run: mvn -B dependency:go-offline
        - save_cache:
            paths:
              - ~/.m2
              - ~/.ccm/repository
            key: v1-dependencies-{{ checksum "pom.xml" }}
        - run:
            command: |
                MAVEN_OPTS="-Xmx384m" mvn -B install
                mvn -B surefire:test -Dtest=ReaperShiroIT
    c_1-2_memory:
      environment:
        CASSANDRA_VERSION: 1.2.19
        CUCUMBER_OPTIONS: "-t ~@cassandra_2_1_onwards"
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx256m" -Dtest=ReaperIT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_1-2_h2:
      environment:
        CASSANDRA_VERSION: 1.2.19
        CUCUMBER_OPTIONS: "-t ~@cassandra_2_1_onwards"
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx256m" -Dtest=ReaperH2IT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_2-0_memory:
      environment:
        CASSANDRA_VERSION: 2.0.17
        CUCUMBER_OPTIONS: "-t ~@cassandra_2_1_onwards"
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx256m" -Dtest=ReaperIT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_2-0_h2:
      environment:
        CASSANDRA_VERSION: 2.0.17
        CUCUMBER_OPTIONS: "-t ~@cassandra_2_1_onwards"
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx256m" -Dtest=ReaperH2IT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_2-1_memory:
      environment:
        CASSANDRA_VERSION: 2.1.20
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx256m" -Dtest=ReaperIT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_2-1_h2:
      environment:
        CASSANDRA_VERSION: 2.1.20
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx256m" -Dtest=ReaperH2IT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_2-1_one-reaper:
      environment:
        CASSANDRA_VERSION: 2.1.20
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_2-1_two-reapers:
      environment:
        CASSANDRA_VERSION: 2.1.20
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=2
      <<: *default_job
    c_2-1_flapping-reapers:
      environment:
        CASSANDRA_VERSION: 2.1.20
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=4
      <<: *default_job
    c_2-1_one-reaper__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 2.1.20
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable
      <<: *default_job
    c_2-1_two-reapers__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 2.1.20
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=2
      <<: *default_job
    c_2-1_flapping-reapers__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 2.1.20
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=4
      <<: *default_job
    c_2-1_upgrades:
      environment:
        CASSANDRA_VERSION: 2.1.20
        CUCUMBER_OPTIONS: "-t ~@all_nodes_reachable"
        JOB_COMMAND: mvn -B -DsurefireArgLine="-Xmx384m" resources:testResources surefire:test -Pintegration-upgrade-tests -Dtest=ReaperCassandraIT
      <<: *default_job
    c_2-1_upgrades__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 2.1.20
        CUCUMBER_OPTIONS: "-t @all_nodes_reachable"
        JOB_COMMAND: mvn -B -DsurefireArgLine="-Xmx384m" resources:testResources surefire:test -Pintegration-upgrade-tests -Dtest=ReaperCassandraIT
      <<: *default_job
    c_2-2_memory:
      environment:
        CASSANDRA_VERSION: 2.2.13
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx256m" -Dtest=ReaperIT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_2-2_h2:
      environment:
        CASSANDRA_VERSION: 2.2.13
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx256m" -Dtest=ReaperH2IT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_2-2_one-reaper:
      environment:
        CASSANDRA_VERSION: 2.2.13
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_2-2_two-reapers:
      environment:
        CASSANDRA_VERSION: 2.2.13
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=2
      <<: *default_job
    c_2-2_flapping-reapers:
      environment:
        CASSANDRA_VERSION: 2.2.13
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=4
      <<: *default_job
    c_2-2_one-reaper__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 2.2.13
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable
      <<: *default_job
    c_2-2_two-reapers__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 2.2.13
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=2
      <<: *default_job
    c_2-2_flapping-reapers__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 2.2.13
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=4
      <<: *default_job
    c_2-2_upgrades:
      environment:
        CASSANDRA_VERSION: 2.2.13
        CUCUMBER_OPTIONS: "-t ~@all_nodes_reachable"
        JOB_COMMAND: mvn -B -DsurefireArgLine="-Xmx384m" resources:testResources surefire:test -Pintegration-upgrade-tests -Dtest=ReaperCassandraIT
      <<: *default_job
    c_2-2_upgrades__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 2.2.13
        CUCUMBER_OPTIONS: "-t @all_nodes_reachable"
        JOB_COMMAND: mvn -B -DsurefireArgLine="-Xmx384m" resources:testResources surefire:test -Pintegration-upgrade-tests -Dtest=ReaperCassandraIT
      <<: *default_job
    c_3-0_memory:
      environment:
        CASSANDRA_VERSION: 3.0.17
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx256m" -Dtest=ReaperIT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_3-0_h2:
      environment:
        CASSANDRA_VERSION: 3.0.17
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx256m" -Dtest=ReaperH2IT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_3-0_one-reaper:
      environment:
        CASSANDRA_VERSION: 3.0.17
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_3-0_two-reapers:
      environment:
        CASSANDRA_VERSION: 3.0.17
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=2
      <<: *default_job
    c_3-0_flapping-reapers:
      environment:
        CASSANDRA_VERSION: 3.0.17
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=4
      <<: *default_job
    c_3-0_one-reaper__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 3.0.17
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable
      <<: *default_job
    c_3-0_two-reapers__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 3.0.17
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=2
      <<: *default_job
    c_3-0_flapping-reapers__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 3.0.17
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=4
      <<: *default_job
    c_3-0_upgrades:
      environment:
        CASSANDRA_VERSION: 3.0.17
        CUCUMBER_OPTIONS: "-t ~@all_nodes_reachable"
        JOB_COMMAND: mvn -B -DsurefireArgLine="-Xmx384m" resources:testResources surefire:test -Pintegration-upgrade-tests -Dtest=ReaperCassandraIT
      <<: *default_job
    c_3-0_upgrades__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 3.0.17
        CUCUMBER_OPTIONS: "-t @all_nodes_reachable"
        JOB_COMMAND: mvn -B -DsurefireArgLine="-Xmx384m" resources:testResources surefire:test -Pintegration-upgrade-tests -Dtest=ReaperCassandraIT
      <<: *default_job
    c_3-11_memory:
      environment:
        CASSANDRA_VERSION: 3.11.3
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx256m" -Dtest=ReaperIT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_3-11_h2:
      environment:
        CASSANDRA_VERSION: 3.11.3
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx256m" -Dtest=ReaperH2IT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_3-11_one-reaper:
      environment:
        CASSANDRA_VERSION: 3.11.3
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_3-11_two-reapers:
      environment:
        CASSANDRA_VERSION: 3.11.3
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=2
      <<: *default_job
    c_3-11_flapping-reapers:
      environment:
        CASSANDRA_VERSION: 3.11.3
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=4
      <<: *default_job
    c_3-11_one-reaper__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 3.11.3
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable
      <<: *default_job
    c_3-11_two-reapers__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 3.11.3
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=2
      <<: *default_job
    c_3-11_flapping-reapers__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 3.11.3
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=4
      <<: *default_job
    c_3-11_upgrades:
      environment:
        CASSANDRA_VERSION: 3.11.3
        CUCUMBER_OPTIONS: "-t ~@all_nodes_reachable"
        JOB_COMMAND: mvn -B -DsurefireArgLine="-Xmx384m" resources:testResources surefire:test -Pintegration-upgrade-tests -Dtest=ReaperCassandraIT
      <<: *default_job
    c_3-11_upgrades__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: 3.11.3
        CUCUMBER_OPTIONS: "-t @all_nodes_reachable"
        JOB_COMMAND: mvn -B -DsurefireArgLine="-Xmx384m" resources:testResources surefire:test -Pintegration-upgrade-tests -Dtest=ReaperCassandraIT
      <<: *default_job
    c_4-0_memory:
      environment:
        CASSANDRA_VERSION: git:trunk
        JOB_COMMAND: mvn surefire:test -B -DsurefireArgLine="-Xmx256m" -Dtest=ReaperIT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_4-0_h2:
      environment:
        CASSANDRA_VERSION: git:trunk
        JOB_COMMAND: mvn surefire:test -B -DsurefireArgLine="-Xmx256m" -Dtest=ReaperH2IT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_4-0_one-reaper:
      environment:
        CASSANDRA_VERSION: git:trunk
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable
      <<: *default_job
    c_4-0_two-reapers:
      environment:
        CASSANDRA_VERSION: git:trunk
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=2
      <<: *default_job
    c_4-0_flapping-reapers:
      environment:
        CASSANDRA_VERSION: git:trunk
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx398m" -Dtest=ReaperCassandraIT -Pskip-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=4
      <<: *default_job
    c_4-0_one-reaper__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: git:trunk
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable
      <<: *default_job
    c_4-0_two-reapers__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: git:trunk
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx384m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=2
      <<: *default_job
    c_4-0_flapping-reapers__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: git:trunk
        JOB_COMMAND: mvn -B surefire:test -DsurefireArgLine="-Xmx398m" -Dtest=ReaperCassandraIT -Ponly-tests-needing-all-nodes-reachable -Dgrim.reaper.min=2 -Dgrim.reaper.max=4
      <<: *default_job
    c_4-0_upgrades:
      environment:
        CASSANDRA_VERSION: git:trunk
        CUCUMBER_OPTIONS: "-t ~@all_nodes_reachable"
        JOB_COMMAND: mvn -B -DsurefireArgLine="-Xmx384m" resources:testResources surefire:test -Pintegration-upgrade-tests -Dtest=ReaperCassandraIT
      <<: *default_job
    c_4-0_upgrades__all_nodes_reachable:
      environment:
        CASSANDRA_VERSION: git:trunk
        CUCUMBER_OPTIONS: "-t @all_nodes_reachable"
        JOB_COMMAND: mvn -B -DsurefireArgLine="-Xmx384m" resources:testResources surefire:test -Pintegration-upgrade-tests -Dtest=ReaperCassandraIT
      <<: *default_job
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - c_1-2_memory:
          requires:
            - build
      - c_1-2_h2:
          requires:
            - build
            - c_1-2_memory
      - c_2-0_memory:
          requires:
            - build
      - c_2-0_h2:
          requires:
            - build
            - c_2-0_memory
      - c_2-1_memory:
          requires:
            - build
      - c_2-1_h2:
          requires:
            - build
            - c_2-1_memory
      - c_2-1_one-reaper:
          requires:
            - build
            - c_2-1_memory
      - c_2-1_two-reapers:
          requires:
            - build
            - c_2-1_memory
            - c_2-1_one-reaper
      - c_2-1_flapping-reapers:
          requires:
            - build
            - c_2-1_memory
            - c_2-1_one-reaper
            - c_2-1_two-reapers
      - c_2-1_one-reaper__all_nodes_reachable:
          requires:
            - build
            - c_2-1_memory
      - c_2-1_two-reapers__all_nodes_reachable:
          requires:
            - build
            - c_2-1_memory
            - c_2-1_one-reaper__all_nodes_reachable
      - c_2-1_flapping-reapers__all_nodes_reachable:
          requires:
            - build
            - c_2-1_memory
            - c_2-1_one-reaper__all_nodes_reachable
            - c_2-1_two-reapers__all_nodes_reachable
      - c_2-1_upgrades:
          requires:
            - build
            - c_2-1_one-reaper
      - c_2-1_upgrades__all_nodes_reachable:
          requires:
            - build
            - c_2-1_upgrades
      - c_2-2_memory:
          requires:
            - build
      - c_2-2_h2:
          requires:
            - build
            - c_2-2_memory
      - c_2-2_one-reaper:
          requires:
            - build
            - c_2-2_memory
      - c_2-2_two-reapers:
          requires:
            - build
            - c_2-2_memory
            - c_2-2_one-reaper
      - c_2-2_flapping-reapers:
          requires:
            - build
            - c_2-2_memory
            - c_2-2_one-reaper
            - c_2-2_two-reapers
      - c_2-2_one-reaper__all_nodes_reachable:
          requires:
            - build
            - c_2-2_memory
      - c_2-2_two-reapers__all_nodes_reachable:
          requires:
            - build
            - c_2-2_memory
            - c_2-2_one-reaper__all_nodes_reachable
      - c_2-2_flapping-reapers__all_nodes_reachable:
          requires:
            - build
            - c_2-2_memory
            - c_2-2_one-reaper__all_nodes_reachable
            - c_2-2_two-reapers__all_nodes_reachable
      - c_2-2_upgrades:
          requires:
            - build
            - c_2-2_one-reaper
      - c_2-2_upgrades__all_nodes_reachable:
          requires:
            - build
            - c_2-2_upgrades
      - c_3-0_memory:
          requires:
            - build
      - c_3-0_h2:
          requires:
            - build
            - c_3-0_memory
      - c_3-0_one-reaper:
          requires:
            - build
            - c_3-0_memory
      - c_3-0_two-reapers:
          requires:
            - build
            - c_3-0_memory
            - c_3-0_one-reaper
      - c_3-0_flapping-reapers:
          requires:
            - build
            - c_3-0_memory
            - c_3-0_one-reaper
            - c_3-0_two-reapers
      - c_3-0_one-reaper__all_nodes_reachable:
          requires:
            - build
            - c_3-0_memory
      - c_3-0_two-reapers__all_nodes_reachable:
          requires:
            - build
            - c_3-0_memory
            - c_3-0_one-reaper__all_nodes_reachable
      - c_3-0_flapping-reapers__all_nodes_reachable:
          requires:
            - build
            - c_3-0_memory
            - c_3-0_one-reaper__all_nodes_reachable
            - c_3-0_two-reapers__all_nodes_reachable
      - c_3-0_upgrades:
          requires:
            - build
            - c_3-0_one-reaper
      - c_3-0_upgrades__all_nodes_reachable:
          requires:
            - build
            - c_3-0_upgrades
      - c_3-11_memory:
          requires:
            - build
      - c_3-11_h2:
          requires:
            - build
            - c_3-11_memory
      - c_3-11_one-reaper:
          requires:
            - build
            - c_3-11_memory
      - c_3-11_two-reapers:
          requires:
            - build
            - c_3-11_memory
            - c_3-11_one-reaper
      - c_3-11_flapping-reapers:
          requires:
            - build
            - c_3-11_memory
            - c_3-11_one-reaper
            - c_3-11_two-reapers
      - c_3-11_one-reaper__all_nodes_reachable:
          requires:
            - build
            - c_3-11_memory
      - c_3-11_two-reapers__all_nodes_reachable:
          requires:
            - build
            - c_3-11_memory
            - c_3-11_one-reaper__all_nodes_reachable
      - c_3-11_flapping-reapers__all_nodes_reachable:
          requires:
            - build
            - c_3-11_memory
            - c_3-11_one-reaper__all_nodes_reachable
            - c_3-11_two-reapers__all_nodes_reachable
      - c_3-11_upgrades:
          requires:
            - build
            - c_3-11_one-reaper
      - c_3-11_upgrades__all_nodes_reachable:
          requires:
            - build
            - c_3-11_upgrades
# 4.0 builds are ignored until new ccm version is released and available in pip
#   see comment above as well under "Download dependencies"
#      - c_4-0_memory:
#          requires:
#            - build
#      - c_4-0_h2:
#          requires:
#            - build
#            - c_4-0_memory
#      - c_4-0_one-reaper:
#          requires:
#            - build
#            - c_4-0_memory
#      - c_4-0_two-reapers:
#          requires:
#            - build
#            - c_4-0_memory
#            - c_4-0_one-reaper
#      - c_4-0_one-reaper__all_nodes_reachable:
#          requires:
#            - build
#            - c_4-0_memory
#      - c_4-0_two-reapers__all_nodes_reachable:
#          requires:
#            - build
#            - c_4-0_memory
#            - c_4-0_one-reaper__all_nodes_reachable
# FIXME -- the following requires more memory than free OSS CircleCI offers
#      - c_4-0_flapping-reapers__all_nodes_reachable:
#          requires:
#            - build
#            - c_4-0_memory
#            - c_4-0_one-reaper__all_nodes_reachable
#            - c_4-0_two-reapers__all_nodes_reachable
#      - c_4-0_flapping-reapers:
#          requires:
#            - build
#            - c_4-0_memory
#            - c_4-0_one-reaper
#            - c_4-0_two-reapers
#            - c_4-0_flapping-reapers__all_nodes_reachable
#      - c_4-0_upgrades:
#          requires:
#            - build
#            - c_4-0_one-reaper
#      - c_4-0_upgrades__all_nodes_reachable:
#          requires:
#            - build
#            - c_4-0_upgrades

notify:
  webhooks:
    # A list of hook hashes, containing the url field
    # gitter hook
    - url: https://webhooks.gitter.im/e/5ef39c9d96700ef6954d
